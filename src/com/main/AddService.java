/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.main;

import com.dataStructures.MyContainer;
import com.dataStructures.MyVisitor;
import static com.main.MainMenuTest.contentPanel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author NUHU
 */
public class AddService extends javax.swing.JPanel {

    /**
     * Creates new form AddUser
     */
    public AddService(Options main) {
        this.main=main;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        uDemo16 = new javax.swing.JLabel();
        uDemo14 = new javax.swing.JLabel();
        serviceID = new javax.swing.JTextField();
        serviceName = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        upload = new javax.swing.JButton();
        uDemo15 = new javax.swing.JLabel();
        chargeRegular = new javax.swing.JTextField();
        uDemo17 = new javax.swing.JLabel();
        chargeHome = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(360, 347));
        setPreferredSize(new java.awt.Dimension(743, 276));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 51, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tiger Expert", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ADD SERVICE INFORMATION");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 530, 40));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 730, 40));

        uDemo16.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 18)); // NOI18N
        uDemo16.setForeground(new java.awt.Color(0, 0, 102));
        uDemo16.setText("Service ID");
        add(uDemo16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 130, 30));

        uDemo14.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 18)); // NOI18N
        uDemo14.setForeground(new java.awt.Color(0, 0, 102));
        uDemo14.setText("Service Name");
        add(uDemo14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 130, 30));

        serviceID.setBackground(new java.awt.Color(204, 204, 255));
        serviceID.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        serviceID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        add(serviceID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 310, -1));

        serviceName.setBackground(new java.awt.Color(204, 204, 255));
        serviceName.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        serviceName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        add(serviceName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 310, -1));

        cancel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        cancel.setText("Close");
        cancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 2));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 90, 35));

        upload.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        upload.setText("Upload Service");
        upload.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 2));
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });
        add(upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 190, 35));

        uDemo15.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 18)); // NOI18N
        uDemo15.setForeground(new java.awt.Color(0, 0, 102));
        uDemo15.setText("Charge (Regular)");
        add(uDemo15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 150, 30));

        chargeRegular.setBackground(new java.awt.Color(204, 204, 255));
        chargeRegular.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        chargeRegular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        add(chargeRegular, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 310, -1));

        uDemo17.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 18)); // NOI18N
        uDemo17.setForeground(new java.awt.Color(0, 0, 102));
        uDemo17.setText("Charge (Home Serving)");
        add(uDemo17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 190, 30));

        chargeHome.setBackground(new java.awt.Color(204, 204, 255));
        chargeHome.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        chargeHome.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        add(chargeHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 310, -1));
    }// </editor-fold>//GEN-END:initComponents

    public String ucfirst(String s){
        try{
            String first, second;
            first=s.substring(0,1);
            second=s.substring(1);
            return first.toUpperCase()+second.toLowerCase();
        }catch(Exception ex){
            return "";
        }
    }
    
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        MainMenuTest.contentPanel.removeAll();
        MainMenuTest.contentPanel.setVisible(false);
        MainMenuTest.contentPanel.setVisible(true);
        
        main.refresh();
    }//GEN-LAST:event_cancelActionPerformed
    Options main;
    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        String serviceID=this.serviceID.getText().trim();
        String serviceName=this.serviceName.getText().trim();
        String chargeHome= this.chargeHome.getText().trim();
        String chargeRegular= this.chargeRegular.getText().trim();
        
        serviceName=ucfirst(serviceName);
        serviceID= serviceID.toUpperCase();
        
        MyContainer c= new MyContainer();
        
        String patServiceID = "^[a-zA-Z0-9]{6}$";
        String patServiceName = "^[a-zA-Z0-9].{3,30}$";
        String patCharge = "^(([1-9](\\d*|\\d{0,2}(,\\d{3})*))|0)(\\.\\d{1,2})?";
 
        if(!Pattern.matches(patServiceID, serviceID)){
            c.insert("Invalid Service ID");
        }
        if(!Pattern.matches(patServiceName, serviceName)){
            c.insert("Invalid Service Name");
        }
        if(!Pattern.matches(patCharge, chargeHome)){
            c.insert("Invalid Home Charge Amount");
        }
        if(!Pattern.matches(patCharge, chargeRegular)){
            c.insert("Invalid Regular Charge Amount");
        }
        
        if(this.serviceID.getText().equals("") || this.serviceName.getText().equals("") || this.chargeHome.getText().equals("")|| this.chargeRegular.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Empty Fields","Error!",JOptionPane.OK_OPTION, new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-197-exclamation-sign.png")));
        }else if(c.getCount()!=0){
            MyVisitor v= new MyVisitor();
            c.accept(v);
            
            JOptionPane.showMessageDialog(null,v.getErrors(), "Error!", JOptionPane.OK_OPTION,  new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-197-exclamation-sign.png")));
        }else{
            String sql;
            try{
                sql="select * from service where serviceID='"+serviceID+"'";
                DBConnect.rs= DBConnect.st.executeQuery(sql);
                if(DBConnect.rs.next()){
                    JOptionPane.showMessageDialog(null, "Service ID already exist","Issue!", JOptionPane.OK_OPTION,  new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-197-exclamation-sign.png")));
                }else{
                    PreparedStatement st;
                    sql="insert into service values (?,?,?,?)";
                    st= DBConnect.con.prepareStatement(sql);
                    st.setString(1, serviceID);
                    st.setString(2, serviceName);
                    st.setDouble(3, Double.parseDouble(chargeRegular));
                    st.setDouble(4, Double.parseDouble(chargeHome));
                    
                    st.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Service Information Uploaded","Success!", JOptionPane.INFORMATION_MESSAGE,new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-199-ok-circle.png")));
                    //Refresh page
                    refresh();
                }
                
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Issue excecuting query","Issue!", JOptionPane.OK_OPTION,  new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-197-exclamation-sign.png")));
            }finally{
                c.purge();
                DBConnect.rs=null;
            }
        }
        
    }//GEN-LAST:event_uploadActionPerformed

    public void refresh(){
        Thread runner = new Thread() {

            public void run() {
                AddService editForm = new AddService(main);
                contentPanel.removeAll();
                contentPanel.add(editForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0));//, 620, 477) );
                try {
                    contentPanel.setVisible(false);
                    contentPanel.setVisible(true);
                } catch (Exception e) {
                    //JOptionPane.showMessageDialog(null, e.getMessage());
                    JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE,  new javax.swing.ImageIcon(getClass().getResource("/com/images/png/glyphicons-197-exclamation-sign.png")));
                }
            }
        };
        runner.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField chargeHome;
    private javax.swing.JTextField chargeRegular;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField serviceID;
    private javax.swing.JTextField serviceName;
    private javax.swing.JLabel uDemo14;
    private javax.swing.JLabel uDemo15;
    private javax.swing.JLabel uDemo16;
    private javax.swing.JLabel uDemo17;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables
}
